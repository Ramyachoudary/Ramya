  ******* ENTITY CLASS*****

package com.example.demo.model;



public class Booking {
	
	private Long id;
	private String flightBookingId;
	private Integer userId;
	public Booking(Long id, String flightBookingId, Integer userId) {
		super();
		this.id = id;
		this.flightBookingId = flightBookingId;
		this.userId = userId;
	}
	public Long getId() {
		return id;
	}
	public void setId(Long id) {
		this.id = id;
	}
	public String getFlightBookingId() {
		return flightBookingId;
	}
	public void setFlightBookingId(String flightBookingId) {
		this.flightBookingId = flightBookingId;
	}
	public Integer getUserId() {
		return userId;
	}
	public void setUserId(Integer userId) {
		this.userId = userId;
	}
	@Override
	public String toString() {
		return "booking [id=" + id + ", flightBookingId=" + flightBookingId + ", userId=" + userId + "]";
	}
	

}

***********BOOKING.DAO********

package com.example.demo.dao;
import java.util.List;

import org.springframework.stereotype.Repository;

import com.example.demo.model.Booking;
@Repository
public interface BookingDao {


	int create(Booking booking);

	List<Booking> read();

	Booking read(Long id);

	int update(Booking booking);

	int delete(Long id);

	//List<Booking> findOrdersByBooking(Long id);
}


************BOOKING DAO IMPL.JAVAA********************


package com.example.demo.dao;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.jdbc.core.JdbcTemplate;
import org.springframework.stereotype.Component;

import com.example.demo.model.Booking;
@Component
public class BookingDaoImpl implements BookingDao{

	@Autowired
	private JdbcTemplate jdbcTemplate;
	
	
	
	@Override
	public int create(Booking booking ) {
		return jdbcTemplate.update("INSERT INTO BOOKING VALUES (?,?,?)", booking.getId(), booking.getFlightBookingId(), booking.getUserId());
	}
	
	
	@Override
	public List<Booking> read() {
		return jdbcTemplate.query("SELECT * FROM BOOKING", new BookingRowMapper());
	}
	
	
	@Override
	public Booking read(Long id) {
		return jdbcTemplate.queryForObject("SELECT * FROM BOOKING WHERE id=?", new BookingRowMapper(), id);
	}

	
	
	@Override
	public int update(Booking booking) {
		return jdbcTemplate.update("UPDATE BOOKING SET flightBookingId=?, userId=? WHERE id=?",  booking.getFlightBookingId(), booking.getUserId(), booking.getId());
	}
	
	
	@Override
	public int delete(Long id) {
		return jdbcTemplate.update("DELETE FROM BOOKING WHERE id=?",id);
	}
	
}


******************BOOKING ROW MAPPER********************

package com.example.demo.dao;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.text.ParseException;
import java.text.SimpleDateFormat;

import org.springframework.jdbc.core.RowMapper;
import org.springframework.stereotype.Component;

import com.example.demo.model.Booking;
@Component

public class BookingRowMapper implements RowMapper<Booking>
{

	@Override
	public Booking mapRow(ResultSet rs, int rowNum) throws SQLException {
		//SimpleDateFormat sdf=new SimpleDateFormat("yyyy-MM-dd");
		
		return new Booking(rs.getLong(1),rs.getString(2),rs.getInt(3));
		
	}

}



*******************BOOKING SERVICE JAVA*********************
package com.example.demo.service;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import com.example.demo.dao.BookingDao;
import com.example.demo.model.Booking;
@Service
public class BookingService {

	@Autowired
	private BookingDao bdao;
	
	public int create(Booking booking)
	{
		return bdao.create(booking);
	}

	public List<Booking> read()
	{
		return bdao.read();
	}

	public Booking read(Long id)
	{
		return bdao.read(id);
	}

	public int update(Booking booking)
	{
		return bdao.update(booking);
	}

	public int delete(Long id)
	{
		return bdao.delete(id);
	}
	
	
}

*******************BOOKING CONTROLLER.JAVA************************
package com.example.demo.controller;
import java.util.Collections;
import java.util.List;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.CrossOrigin;
import org.springframework.web.bind.annotation.DeleteMapping;
import org.springframework.web.bind.annotation.GetMapping;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.PostMapping;
import org.springframework.web.bind.annotation.PutMapping;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RestController;

import com.example.demo.model.Booking;
import com.example.demo.service.BookingService;
@RestController
@CrossOrigin({"http://localhost:4200","*"})
public class BookingController {


	@Autowired
	private BookingService bs;
	
	@PostMapping("/booking")
	public int addBooking(@RequestBody Booking booking)
	{
		booking.setId(generateBookingId());
		return bs.create(booking);
	}
	
	@GetMapping("/booking")
	public List<Booking> getAllBookings()
	{
		return bs.read();
	}
	
	@GetMapping("/booking/{id}")
	public Booking findBookingById(@PathVariable Long id)
	{
		return bs.read(id);
	}
	
//	@GetMapping("/order/customer/{id}")
//	public List<Order> findOrdersByCustomer(@PathVariable Long id)
//	{
//		return cs.findOrdersByCustomer(id);
//	}
	
	private Long generateBookingId()
	{
		List<Booking> bookings = getAllBookings();
		//Collections.sort(bookings,(a,b)->a.getId().compareTo(b.getId()));
		if(bookings.size()==0)
			return 1L;
		Long lastIndex = bookings.get(bookings.size()-1).getId();
		return lastIndex+1;
	}
	
	@PutMapping("/booking")
	public int modifyBooking(@RequestBody Booking booking)
	{
		return bs.update(booking);
	}
	
	@DeleteMapping("/booking/{id}")
	public int removeBooking(@PathVariable Long id)
	{
		return bs.delete(id);
	}
}

****************APPLICATION PROPERTIES*****************
spring.datasource.url=jdbc:mysql://localhost:3306/Airline
spring.datasource.username=root
spring.datasource.password=Ramya@sql00


****************BOOKING APPLICATION.JAVA********************

package com.example.demo;

import org.springframework.boot.SpringApplication;
import org.springframework.boot.autoconfigure.SpringBootApplication;

@SpringBootApplication
public class BookingApplication {

	public static void main(String[] args) {
		SpringApplication.run(BookingApplication.class, args);
		System.out.println("Hello world");
	}
	

} 


